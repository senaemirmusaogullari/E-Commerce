// Generated by Dagger (https://dagger.dev).
package com.senaemirmusaogullari.upschoolcapstoneproject.di;

import com.senaemirmusaogullari.upschoolcapstoneproject.data.repository.ProductRepository;
import com.senaemirmusaogullari.upschoolcapstoneproject.data.source.local.ProductDao;
import com.senaemirmusaogullari.upschoolcapstoneproject.data.source.remote.ProductService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RepositoryModule_ProvideProductsRepositoryFactory implements Factory<ProductRepository> {
  private final Provider<ProductService> productServiceProvider;

  private final Provider<ProductDao> productDaoProvider;

  public RepositoryModule_ProvideProductsRepositoryFactory(
      Provider<ProductService> productServiceProvider, Provider<ProductDao> productDaoProvider) {
    this.productServiceProvider = productServiceProvider;
    this.productDaoProvider = productDaoProvider;
  }

  @Override
  public ProductRepository get() {
    return provideProductsRepository(productServiceProvider.get(), productDaoProvider.get());
  }

  public static RepositoryModule_ProvideProductsRepositoryFactory create(
      Provider<ProductService> productServiceProvider, Provider<ProductDao> productDaoProvider) {
    return new RepositoryModule_ProvideProductsRepositoryFactory(productServiceProvider, productDaoProvider);
  }

  public static ProductRepository provideProductsRepository(ProductService productService,
      ProductDao productDao) {
    return Preconditions.checkNotNullFromProvides(RepositoryModule.INSTANCE.provideProductsRepository(productService, productDao));
  }
}
