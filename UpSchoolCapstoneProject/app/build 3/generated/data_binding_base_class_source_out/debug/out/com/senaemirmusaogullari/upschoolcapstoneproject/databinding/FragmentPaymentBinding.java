// Generated by view binder compiler. Do not edit!
package com.senaemirmusaogullari.upschoolcapstoneproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.senaemirmusaogullari.upschoolcapstoneproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPaymentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AutoCompleteTextView actMonth;

  @NonNull
  public final AutoCompleteTextView actYear;

  @NonNull
  public final MaterialButton btnBuyNow;

  @NonNull
  public final TextInputEditText etAddress;

  @NonNull
  public final TextInputEditText etCardNumber;

  @NonNull
  public final TextInputEditText etCvc;

  @NonNull
  public final TextInputEditText etName;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final CardView paymentAddressCardView;

  @NonNull
  public final TextView paymentAddressTitle;

  @NonNull
  public final CardView paymentCardNameCardView;

  @NonNull
  public final CardView paymentCardNumberCardView;

  @NonNull
  public final TextView paymentCardTitle;

  @NonNull
  public final CardView paymentCvvCardView;

  @NonNull
  public final CardView paymentMonthCardView;

  @NonNull
  public final CardView paymentYearCardView;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextInputLayout tilAddress;

  @NonNull
  public final TextInputLayout tilCvc;

  @NonNull
  public final TextInputLayout tilMonth;

  @NonNull
  public final TextInputLayout tilNumber;

  @NonNull
  public final TextInputLayout tilSurname;

  @NonNull
  public final TextInputLayout tilYear;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvToolbarTitle;

  private FragmentPaymentBinding(@NonNull ConstraintLayout rootView,
      @NonNull AutoCompleteTextView actMonth, @NonNull AutoCompleteTextView actYear,
      @NonNull MaterialButton btnBuyNow, @NonNull TextInputEditText etAddress,
      @NonNull TextInputEditText etCardNumber, @NonNull TextInputEditText etCvc,
      @NonNull TextInputEditText etName, @NonNull ImageView ivBack,
      @NonNull CardView paymentAddressCardView, @NonNull TextView paymentAddressTitle,
      @NonNull CardView paymentCardNameCardView, @NonNull CardView paymentCardNumberCardView,
      @NonNull TextView paymentCardTitle, @NonNull CardView paymentCvvCardView,
      @NonNull CardView paymentMonthCardView, @NonNull CardView paymentYearCardView,
      @NonNull ProgressBar progressBar, @NonNull TextInputLayout tilAddress,
      @NonNull TextInputLayout tilCvc, @NonNull TextInputLayout tilMonth,
      @NonNull TextInputLayout tilNumber, @NonNull TextInputLayout tilSurname,
      @NonNull TextInputLayout tilYear, @NonNull Toolbar toolbar,
      @NonNull TextView tvToolbarTitle) {
    this.rootView = rootView;
    this.actMonth = actMonth;
    this.actYear = actYear;
    this.btnBuyNow = btnBuyNow;
    this.etAddress = etAddress;
    this.etCardNumber = etCardNumber;
    this.etCvc = etCvc;
    this.etName = etName;
    this.ivBack = ivBack;
    this.paymentAddressCardView = paymentAddressCardView;
    this.paymentAddressTitle = paymentAddressTitle;
    this.paymentCardNameCardView = paymentCardNameCardView;
    this.paymentCardNumberCardView = paymentCardNumberCardView;
    this.paymentCardTitle = paymentCardTitle;
    this.paymentCvvCardView = paymentCvvCardView;
    this.paymentMonthCardView = paymentMonthCardView;
    this.paymentYearCardView = paymentYearCardView;
    this.progressBar = progressBar;
    this.tilAddress = tilAddress;
    this.tilCvc = tilCvc;
    this.tilMonth = tilMonth;
    this.tilNumber = tilNumber;
    this.tilSurname = tilSurname;
    this.tilYear = tilYear;
    this.toolbar = toolbar;
    this.tvToolbarTitle = tvToolbarTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPaymentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPaymentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_payment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPaymentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actMonth;
      AutoCompleteTextView actMonth = ViewBindings.findChildViewById(rootView, id);
      if (actMonth == null) {
        break missingId;
      }

      id = R.id.actYear;
      AutoCompleteTextView actYear = ViewBindings.findChildViewById(rootView, id);
      if (actYear == null) {
        break missingId;
      }

      id = R.id.btnBuyNow;
      MaterialButton btnBuyNow = ViewBindings.findChildViewById(rootView, id);
      if (btnBuyNow == null) {
        break missingId;
      }

      id = R.id.etAddress;
      TextInputEditText etAddress = ViewBindings.findChildViewById(rootView, id);
      if (etAddress == null) {
        break missingId;
      }

      id = R.id.et_card_number;
      TextInputEditText etCardNumber = ViewBindings.findChildViewById(rootView, id);
      if (etCardNumber == null) {
        break missingId;
      }

      id = R.id.et_cvc;
      TextInputEditText etCvc = ViewBindings.findChildViewById(rootView, id);
      if (etCvc == null) {
        break missingId;
      }

      id = R.id.etName;
      TextInputEditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.ivBack;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.paymentAddressCardView;
      CardView paymentAddressCardView = ViewBindings.findChildViewById(rootView, id);
      if (paymentAddressCardView == null) {
        break missingId;
      }

      id = R.id.paymentAddressTitle;
      TextView paymentAddressTitle = ViewBindings.findChildViewById(rootView, id);
      if (paymentAddressTitle == null) {
        break missingId;
      }

      id = R.id.paymentCardNameCardView;
      CardView paymentCardNameCardView = ViewBindings.findChildViewById(rootView, id);
      if (paymentCardNameCardView == null) {
        break missingId;
      }

      id = R.id.paymentCardNumberCardView;
      CardView paymentCardNumberCardView = ViewBindings.findChildViewById(rootView, id);
      if (paymentCardNumberCardView == null) {
        break missingId;
      }

      id = R.id.paymentCardTitle;
      TextView paymentCardTitle = ViewBindings.findChildViewById(rootView, id);
      if (paymentCardTitle == null) {
        break missingId;
      }

      id = R.id.paymentCvvCardView;
      CardView paymentCvvCardView = ViewBindings.findChildViewById(rootView, id);
      if (paymentCvvCardView == null) {
        break missingId;
      }

      id = R.id.paymentMonthCardView;
      CardView paymentMonthCardView = ViewBindings.findChildViewById(rootView, id);
      if (paymentMonthCardView == null) {
        break missingId;
      }

      id = R.id.paymentYearCardView;
      CardView paymentYearCardView = ViewBindings.findChildViewById(rootView, id);
      if (paymentYearCardView == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.tilAddress;
      TextInputLayout tilAddress = ViewBindings.findChildViewById(rootView, id);
      if (tilAddress == null) {
        break missingId;
      }

      id = R.id.til_cvc;
      TextInputLayout tilCvc = ViewBindings.findChildViewById(rootView, id);
      if (tilCvc == null) {
        break missingId;
      }

      id = R.id.tilMonth;
      TextInputLayout tilMonth = ViewBindings.findChildViewById(rootView, id);
      if (tilMonth == null) {
        break missingId;
      }

      id = R.id.tilNumber;
      TextInputLayout tilNumber = ViewBindings.findChildViewById(rootView, id);
      if (tilNumber == null) {
        break missingId;
      }

      id = R.id.tilSurname;
      TextInputLayout tilSurname = ViewBindings.findChildViewById(rootView, id);
      if (tilSurname == null) {
        break missingId;
      }

      id = R.id.tilYear;
      TextInputLayout tilYear = ViewBindings.findChildViewById(rootView, id);
      if (tilYear == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_toolbar_title;
      TextView tvToolbarTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvToolbarTitle == null) {
        break missingId;
      }

      return new FragmentPaymentBinding((ConstraintLayout) rootView, actMonth, actYear, btnBuyNow,
          etAddress, etCardNumber, etCvc, etName, ivBack, paymentAddressCardView,
          paymentAddressTitle, paymentCardNameCardView, paymentCardNumberCardView, paymentCardTitle,
          paymentCvvCardView, paymentMonthCardView, paymentYearCardView, progressBar, tilAddress,
          tilCvc, tilMonth, tilNumber, tilSurname, tilYear, toolbar, tvToolbarTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
